name: Build

on:
  push:
    branches:
      - thead-toolchains
  pull_request:
    branches:
      - thead-toolchains
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:     [ubuntu-20.04, ubuntu-22.04]
        mode:   [linux]
        target: [rv64gc-lp64d, rv64gcv0p7_zfh_xtheadc-lp64d, rv64gcv_zfh_xtheadc-lp64d]
    steps:
      - uses: actions/checkout@v4

      - name: install dependencies
        run: sudo ./.github/setup-apt.sh

      - name: build toolchain
        run: |
          TARGET_TUPLE=($(echo ${{ matrix.target }} | tr "-" "\n"))
          ./configure --prefix=/opt/riscv --with-arch=${TARGET_TUPLE[0]} --with-abi=${TARGET_TUPLE[1]}
          sudo make -j $(nproc) ${{ matrix.mode }}

      - name: recover space
        run: |
          sudo du -hs / 2> /dev/null || true
          sudo rm -rf binutils dejagnu gcc gdb glibc llvm musl newlib pk qemu spike || true
          sudo du -hs / 2> /dev/null || true

      - name: tarball build
        run: tar czvf riscv.tar.gz -C /opt/ riscv/

      - name: generate prebuilt toolchain name
        id:   toolchain-name-generator
        run: |
          if [[ "${{ matrix.target }}" == *"32"* ]]; then BITS=32; else BITS=64; fi
          case "${{ matrix.mode }}" in
            "linux")
              MODE="glibc";;
            "musl")
              MODE="musl";;
            *)
              MODE="elf";;
          esac
          TARGET_TUPLE=($(echo ${{ matrix.target }} | tr "-" "\n"))
          echo ::set-output name=TOOLCHAIN_NAME::riscv$BITS-${TARGET_TUPLE[0]}-$MODE-${{ matrix.os }}-nightly

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.toolchain-name-generator.outputs.TOOLCHAIN_NAME }}
          path: riscv.tar.gz
